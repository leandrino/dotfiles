!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
,gcf	vim/settings/search.vim	/^nnoremap ,gcf :exec "Ag " . expand("%:t:r")<CR>$/;"	m
,gd	vim/settings/search.vim	/^nnoremap <silent> ,gd :Ag 'def <cword>'<CR>$/;"	m
,gf	vim/settings/gotofile.vim	/^nnoremap <silent> ,gf   :vertical botright wincmd F<CR>$/;"	m
,gg	vim/settings/search.vim	/^nnoremap ,gg :Ag ""<left>$/;"	m
,k	vim/settings/search.vim	/^vnoremap ,k :<C-U>execute "Ag " . GetVisual()<CR>$/;"	m
<A-">	vim/settings/keymap-linux.vim	/^nnoremap <A-"> f"ci"$/;"	m
<A-%>	vim/settings/keymap-linux.vim	/^map <A-%> :so %<CR>$/;"	m
<A-'>	vim/settings/keymap-linux.vim	/^nnoremap <A-'> f'ci'$/;"	m
<A-(>	vim/settings/keymap-linux.vim	/^nnoremap <A-(> f(ci($/;"	m
<A-)>	vim/settings/keymap-linux.vim	/^nnoremap <A-)> f)ci)$/;"	m
<A-/>	vim/settings/keymap-linux.vim	/^imap <A-\/> <Esc>:TComment<CR>i$/;"	m
<A-/>	vim/settings/keymap-linux.vim	/^map <A-\/> :TComment<CR>$/;"	m
<A-1>	vim/settings/keymap-linux.vim	/^map <silent> <A-1> :tabn 1<cr>$/;"	m
<A-2>	vim/settings/keymap-linux.vim	/^map <silent> <A-2> :tabn 2<cr>$/;"	m
<A-3>	vim/settings/keymap-linux.vim	/^map <silent> <A-3> :tabn 3<cr>$/;"	m
<A-4>	vim/settings/keymap-linux.vim	/^map <silent> <A-4> :tabn 4<cr>$/;"	m
<A-5>	vim/settings/keymap-linux.vim	/^map <silent> <A-5> :tabn 5<cr>$/;"	m
<A-6>	vim/settings/keymap-linux.vim	/^map <silent> <A-6> :tabn 6<cr>$/;"	m
<A-7>	vim/settings/keymap-linux.vim	/^map <silent> <A-7> :tabn 7<cr>$/;"	m
<A-8>	vim/settings/keymap-linux.vim	/^map <silent> <A-8> :tabn 8<cr>$/;"	m
<A-9>	vim/settings/keymap-linux.vim	/^map <silent> <A-9> :tabn 9<cr>$/;"	m
<A-A>	vim/settings/keymap-linux.vim	/^nmap <A-A> :Tabularize \/$/;"	m
<A-A>	vim/settings/keymap-linux.vim	/^vmap <A-A> :Tabularize \/$/;"	m
<A-D>	vim/settings/keymap-linux.vim	/^imap <silent> <A-D> -$/;"	m
<A-K>	vim/settings/keymap-linux.vim	/^imap <silent> <A-K> -$/;"	m
<A-N>	vim/settings/keymap-linux.vim	/^nmap <A-N> :NERDTreeToggle<CR>$/;"	m
<A-[>	vim/settings/keymap-linux.vim	/^nnoremap <A-[> f[ci[$/;"	m
<A-]>	vim/settings/keymap-linux.vim	/^nnoremap <A-]> f]ci]$/;"	m
<A-d>	vim/settings/keymap-linux.vim	/^imap <silent> <A-d> _$/;"	m
<A-j>	vim/settings/keymap-linux.vim	/^nnoremap <silent> <A-j> }$/;"	m
<A-k>	vim/settings/keymap-linux.vim	/^imap <silent> <A-k> _$/;"	m
<A-k>	vim/settings/keymap-linux.vim	/^nnoremap <silent> <A-k> {$/;"	m
<C-Down>	vim/settings/keymap-linux.vim	/^nnoremap <C-Down> <C-w>-$/;"	m
<C-Left>	vim/settings/keymap-linux.vim	/^nnoremap <C-Left> <C-w><$/;"	m
<C-Right>	vim/settings/keymap-linux.vim	/^nnoremap <C-Right>  <C-w>>$/;"	m
<C-Up>	vim/settings/keymap-linux.vim	/^nnoremap <C-Up> <C-w>+$/;"	m
<C-h>	vim/settings/split.vim	/^nmap <C-h> <C-w>h$/;"	m
<C-j>	vim/settings/split.vim	/^nmap <C-j> <C-w>j$/;"	m
<C-k>	vim/settings/split.vim	/^nmap <C-k> <C-w>k$/;"	m
<C-l>	vim/settings/split.vim	/^nmap <C-l> <C-w>l$/;"	m
<C-n>	init.vim	/^map <C-n> :NERDTreeToggle<CR>$/;"	m
<C-n>	vim/settings/nerdtree.vim	/^map <C-n> :NERDTreeToggle<CR>$/;"	m
<S-TAB>	init.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	init.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	init.vim	/^nmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<c-space>	init.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	init.vim	/^noremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<leader>a	init.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	init.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>f	init.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>qf	init.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	init.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<space>a	init.vim	/^nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	init.vim	/^nnoremap <silent> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	init.vim	/^nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	init.vim	/^nnoremap <silent> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	init.vim	/^nnoremap <silent> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	init.vim	/^nnoremap <silent> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	init.vim	/^nnoremap <silent> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	init.vim	/^nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Fold	init.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	init.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
GetVisual	vim/settings/search.vim	/^function! GetVisual()$/;"	f
K	init.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
OR	init.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
[g	init.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	init.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
af	init.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
check_back_space	init.vim	/^function! s:check_back_space() abort$/;"	f
g:NERDTreeDirArrowCollapsible	init.vim	/^let g:NERDTreeDirArrowCollapsible = '▾'$/;"	v
g:NERDTreeDirArrowExpandable	init.vim	/^let g:NERDTreeDirArrowExpandable = '▸'$/;"	v
g:NERDTreeIndicatorMapCustom	vim/settings/nerdtree-git-plugin.vim	/^let g:NERDTreeIndicatorMapCustom = {$/;"	v
g:airline#extensions#tabline#enabled	init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#formatter	init.vim	/^let g:airline#extensions#tabline#formatter = 'unique_tail_improved'$/;"	v
g:airline_powerline_fonts	init.vim	/^let g:airline_powerline_fonts = 0$/;"	v
g:airline_powerline_fonts	init.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:ale_fix_on_save	init.vim	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	init.vim	/^let g:ale_fixers = {$/;"	v
g:ale_linters_explicit	init.vim	/^let g:ale_linters_explicit = 1$/;"	v
g:indent_guides_auto_colors	vim/settings/vim-indent-guides.vim	/^let g:indent_guides_auto_colors = 1$/;"	v
g:indent_guides_enable_on_vim_startup	init.vim	/^let g:indent_guides_enable_on_vim_startup=1$/;"	v
g:indent_guides_guide_size	vim/settings/vim-indent-guides.vim	/^let g:indent_guides_guide_size = 1$/;"	v
g:indent_guides_start_level	init.vim	/^let g:indent_guides_start_level=2$/;"	v
g:indent_guides_start_level	vim/settings/vim-indent-guides.vim	/^let g:indent_guides_start_level = 2$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline = {}$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline.colorscheme = 'solarized'$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline.component_type = {'buffers': 'tabsel'}$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline.tabline = {'left': [['buffers']], 'right': [['close']]}$/;"	v
g:lightline#bufferline#composed_number_map	vim/settings/lightline.vim	/^let g:lightline#bufferline#composed_number_map = {$/;"	v
g:lightline#bufferline#filename_modifier	vim/settings/lightline.vim	/^let g:lightline#bufferline#filename_modifier = ':t'$/;"	v
g:lightline#bufferline#shorten_path	vim/settings/lightline.vim	/^let g:lightline#bufferline#shorten_path = 0$/;"	v
g:lightline#bufferline#show_number	vim/settings/lightline.vim	/^let g:lightline#bufferline#show_number  = 1$/;"	v
g:lightline#bufferline#unnamed	vim/settings/lightline.vim	/^let g:lightline#bufferline#unnamed = '[No Name]'$/;"	v
g:ycm_add_preview_to_completeopt	init.vim	/^let g:ycm_add_preview_to_completeopt = 0$/;"	v
gd	init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	init.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	init.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
if	init.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
mygroup	init.vim	/^augroup mygroup$/;"	a
numbertoggle	init.vim	/^augroup numbertoggle$/;"	a
show_documentation	init.vim	/^function! s:show_documentation()$/;"	f
uname	vim/settings.vim	/^let uname = system("uname -s")$/;"	v
vimsettings	vim/settings.vim	/^let vimsettings = '~\/dotfiles\/vim\/settings'$/;"	v
